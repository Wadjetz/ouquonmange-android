    private void CreateAlertMobileSetting() {

        AlertDialog.Builder builder = new AlertDialog.Builder(this);

        builder.setTitle(R.string.setting_mobile_data_confirm_title)
                .setMessage(R.string.setting_connection_confirm_message)
                .setCancelable(false)
                .setPositiveButton(R.string.yes_message, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        setEnableDataMobile(true);
                        Intent intent = getIntent();
                        finish();
                        startActivity(intent);
                    }
                })
                .setNegativeButton(R.string.no_message, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        setEnableDataMobile(false);
                        Intent intent = getIntent();
                        finish();
                        startActivity(intent);
                    }
                })
                .create()
                .show();
    }

    public void setEnableDataMobile(boolean enable){
        // Enable data
        ConnectivityManager dataManager;
        dataManager  = (ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
        Method dataMtd = null;
        try {
            dataMtd = ConnectivityManager.class.getDeclaredMethod("setMobileDataEnabled", boolean.class);
            dataMtd.setAccessible(true);
            dataMtd.invoke(dataManager, enable);
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        } catch (InvocationTargetException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        }
        //True - to enable data connectivity .
    }
    private void CreateAlertWifiSetting() {
        final WifiManager wifi =(WifiManager)getSystemService(getApplicationContext().WIFI_SERVICE);
        AlertDialog.Builder builder = new AlertDialog.Builder(this);

        builder.setTitle(R.string.setting_wifi_confirm_title)
                .setMessage(R.string.setting_connection_confirm_message)
                .setCancelable(false)
                .setPositiveButton(R.string.yes_message, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        wifi.setWifiEnabled(true);
                        if(checkConnection(getApplicationContext())){
                            Intent intent = getIntent();
                            finish();
                            startActivity(intent);
                        }else {
                            CreateAlertMobileSetting();
                        }
                    }
                })
                .setNegativeButton(R.string.no_message, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        wifi.setWifiEnabled(false);
                        //Cancel
                        Intent intent = getIntent();
                        finish();
                        startActivity(intent);
                    }
                })
                .create()
                .show();
    }